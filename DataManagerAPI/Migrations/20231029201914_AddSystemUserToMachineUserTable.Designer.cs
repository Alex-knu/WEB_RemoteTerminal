// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataManagerAPI.Migrations
{
    [DbContext(typeof(DataManagerApiDbContext))]
    [Migration("20231029201914_AddSystemUserToMachineUserTable")]
    partial class AddSystemUserToMachineUserTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataManagerAPI.Core.Entities.CommandHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Command")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MachineUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MachineUserId");

                    b.ToTable("CommandsHistory");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.MachineUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("MachineUsers");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.SystemUserToMachineUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("7e056d96-fd04-4d0f-8b39-20e3f3ec9d51"));

                    b.Property<Guid>("MachineUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MachineUserId");

                    b.ToTable("SystemUserToMachineUser");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.CommandHistory", b =>
                {
                    b.HasOne("DataManagerAPI.Core.Entities.MachineUser", "MachineUser")
                        .WithMany("CommandHistory")
                        .HasForeignKey("MachineUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineUser");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.MachineUser", b =>
                {
                    b.HasOne("DataManagerAPI.Core.Entities.Machine", "Machine")
                        .WithMany("MachineUsers")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.SystemUserToMachineUser", b =>
                {
                    b.HasOne("DataManagerAPI.Core.Entities.MachineUser", "MachineUser")
                        .WithMany("SystemUserToMachineUsers")
                        .HasForeignKey("MachineUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineUser");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.Machine", b =>
                {
                    b.Navigation("MachineUsers");
                });

            modelBuilder.Entity("DataManagerAPI.Core.Entities.MachineUser", b =>
                {
                    b.Navigation("CommandHistory");

                    b.Navigation("SystemUserToMachineUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
